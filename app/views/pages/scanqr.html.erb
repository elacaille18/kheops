<div class="bandeau">
  <div class="bandeau-link">
    <%= link_to input_path do %>
      <i class="fa fa-chevron-left" aria-hidden="true"></i>
    <% end %>
  </div>
  <div class=bandeau-title>
    <h3>Scanner un colis</h3>
  </div>
</div>
<div class="container padded">
  <div class="row">
    <div class="col-xs-12">
      <div id="video-set-up" class=text-center>
        <video id="video"></video>
        <canvas id="canvas" class="hidden"></canvas>
        <img src="#" id="photo" alt="photo" class="hidden">
        <div class=text-center>
          <button id="startbutton" class="btn navbar-wagon-button">
            <i class="fa fa-camera" aria-hidden="true"></i>
          </button>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-xs-12">
      <div id="info-for-user" class="text-center">

      </div>
      <div id="result-scan">

    </div>
  </div>

</div>


<% content_for(:after_js) do %>
  <script>
//   (function() {

//   var streaming = false,
//       video        = document.querySelector('#video'),
//       cover        = document.querySelector('#cover'),
//       canvas       = document.querySelector('#canvas'),
//       photo        = document.querySelector('#photo'),
//       startbutton  = document.querySelector('#startbutton'),
//       width = 320,
//       height = 0;

//   navigator.getMedia = ( navigator.getUserMedia ||
//                          navigator.webkitGetUserMedia ||
//                          navigator.mozGetUserMedia ||
//                          navigator.msGetUserMedia);

//   navigator.getMedia(
//     {
//       video: true,
//       audio: false
//     },
//     function(stream) {
//       if (navigator.mozGetUserMedia) {
//         video.mozSrcObject = stream;
//       } else {
//         var vendorURL = window.URL || window.webkitURL;
//         video.src = vendorURL.createObjectURL(stream);
//       }
//       video.play();
//     },
//     function(err) {
//       console.log("An error occured! " + err);
//     }
//   );

//   video.addEventListener('canplay', function(ev){
//     if (!streaming) {
//       height = video.videoHeight / (video.videoWidth/width);
//       video.setAttribute('width', width);
//       video.setAttribute('height', height);
//       canvas.setAttribute('width', width);
//       canvas.setAttribute('height', height);
//       streaming = true;
//     }
//   }, false);

//   function takepicture() {
//     canvas.width = width;
//     canvas.height = height;
//     canvas.getContext('2d').drawImage(video, 0, 0, width, height);
//     var data = canvas.toDataURL('image/png');
//     photo.setAttribute('src', data);
//   }

//   startbutton.addEventListener('click', function(ev){
//       takepicture();
//     ev.preventDefault();
//   }, false);

// })();
  (function() {
    // The width and height of the captured photo. We will set the
    // width to the value defined here, but the height will be
    // calculated based on the aspect ratio of the input stream.

    var width = 220;    // We will scale the photo width to this
    var height = 0;     // This will be computed based on the input stream

    // |streaming| indicates whether or not we're currently streaming
    // video from the camera. Obviously, we start at false.

    var streaming = false;

    // The various HTML elements we need to configure or control. These
    // will be set by the startup() function.

    var video = null;
    var canvas = null;
    var photo = null;
    var startbutton = null;

    function startup() {
      video = document.getElementById('video');
      canvas = document.getElementById('canvas');
      photo = document.getElementById('photo');
      startbutton = document.getElementById('startbutton');

      navigator.getMedia = ( navigator.getUserMedia ||
                             navigator.webkitGetUserMedia ||
                             navigator.mozGetUserMedia ||
                             navigator.msGetUserMedia);

      navigator.getMedia(
        {
          video: true,
          audio: false
        },
        function(stream) {
          if (navigator.mozGetUserMedia) {
            video.mozSrcObject = stream;
          } else {
            var vendorURL = window.URL || window.webkitURL;
            video.src = vendorURL.createObjectURL(stream);
          }
          video.play();
        },
        function(err) {
          console.log("An error occured! " + err);
        }
      );

      video.addEventListener('canplay', function(ev){
        if (!streaming) {
          height = video.videoHeight / (video.videoWidth/width);

          // Firefox currently has a bug where the height can't be read from
          // the video, so we will make assumptions if this happens.

          if (isNaN(height)) {
            height = width / (4/3);
          }

          video.setAttribute('width', width);
          video.setAttribute('height', height);
          canvas.setAttribute('width', width);
          canvas.setAttribute('height', height);
          streaming = true;
        }
      }, false);

      startbutton.addEventListener('click', function(ev){
        takepicture();

        ev.preventDefault();
      }, false);

      clearphoto();
    }

    // Fill the photo with an indication that none has been
    // captured.

    function clearphoto() {
      var context = canvas.getContext('2d');
      context.fillStyle = "#AAA";
      context.fillRect(0, 0, canvas.width, canvas.height);

      var data = canvas.toDataURL('image/png');

      photo.setAttribute('src', data);
      //var qrcode = # Qrio::Qr.load(photo).qr.text
    }

    // Capture a photo by fetching the current contents of the video
    // and drawing it into a canvas, then converting that to a PNG
    // format data URL. By drawing it on an offscreen canvas and then
    // drawing that to the screen, we can change its size and/or apply
    // other changes before drawing it.

    function takepicture() {
      var context = canvas.getContext('2d');
      if (width && height) {
        canvas.width = width;
        canvas.height = height;
        context.drawImage(video, 0, 0, width, height);

        var data = canvas.toDataURL('image/png');
        //console.log(data);
        photo.setAttribute('src', data);
        var settings = {data: data}

        // Info pour le user declenche au clic
        $("#info-for-user").empty().append("<p>Patientez s'il vous plait</p>");

        $.ajax({
          data: settings,
          dataType: 'script',
          type: 'post',
          url: "parcels/decode",
          success: function(data){
            console.log("Successfully created");
          }
        });
      } else {
        clearphoto();
      }
    }

    // Set up our event listener to run the startup process
    // once loading is complete.
    window.addEventListener('load', startup, false);
  })();
  </script>
<% end %>
